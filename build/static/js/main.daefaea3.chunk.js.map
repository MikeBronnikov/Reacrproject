{"version":3,"sources":["conponents/Navbar/Navbar.module.css","conponents/Profile/ProfileInfo/ProfileInfo.module.css","conponents/Users/User/user.module.css","conponents/Profile/posts/post/post.module.css","conponents/Dialogs/Dialogs.module.css","conponents/Dialogs/TextingArea/TextingArea.module.css","conponents/Navbar/MyFrineds/MyFriends.module.css","conponents/Navbar/MyFrineds/Friend/Friend.module.css","conponents/Profile/Profile.module.css","conponents/Profile/posts/posts.module.css","conponents/Header/Header.module.css","conponents/Dialogs/DialogItem/DialogItem.module.css","conponents/Dialogs/Message.module.css","conponents/Users/Users.module.css","logo.svg","serviceWorker.js","redux/dialogsReducer.js","redux/ProfileReducer.js","redux/friendsReducer.js","redux/UsersReducer.js","redux/redux-store.js","conponents/Navbar/MyFrineds/Friend/Friend.jsx","conponents/Navbar/MyFrineds/MyFriends.jsx","conponents/Navbar/MyFrineds/MyFriendscontainer.js","conponents/Navbar/Navbar.js","conponents/Profile/posts/post/post.jsx","conponents/Profile/posts/Posts.jsx","conponents/Profile/ProfileInfo/ProfileInfo.jsx","conponents/Profile/posts/PostsContainer.jsx","conponents/Profile/Profile.js","conponents/Header/Header.js","conponents/Dialogs/DialogItem/DialogItem.jsx","conponents/Dialogs/Message.jsx","conponents/Dialogs/TextingArea/InterlocutorMassage/InterlocutorMassage.jsx","conponents/Dialogs/TextingArea/TextingArea.jsx","conponents/Dialogs/TextingArea/TextingAreaContainer.js","conponents/Dialogs/Dialogs.jsx","conponents/Dialogs/DialogsContainer.jsx","conponents/Users/User/User.jsx","conponents/Users/Users.jsx","conponents/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","dialogs","id","name","avatarSrc","messages","messageTexting","dialogsReducer","state","action","type","copyState","text","messageObject","sender","push","posts","likesCount","posttext","profileReducer","post","copystate","friends","isOnline","index","friendsReducer","users","fullName","status","AmIfollowed","avatarImg","UsersReducer","map","u","reducers","combineReducers","profilePage","dialogsPage","friendsPage","usersPage","usersReducer","store","createStore","Friend","props","className","styles","wrapper","src","MyFrineds","componentsfriend","friend","MyFriendscontainer","connect","dispatch","MyFriends","Navbar","navbar","to","item","activeClassName","active","Post","imgAndContent","alt","buttons","numOflikes","Posts","componentsPostData","dataposts","newPostElement","React","createRef","onChange","current","value","ontextchange","ref","cols","rows","onClick","addpost","ProfileInfo","headPic","infowrapper","avatar","descriptionWrapper","description","PostsContainer","updatePostTextActionCreator","Profile","bodyContent","Header","header","DialogItem","Message","InterlocutorMessage","TextingArea","messageTextarea","path","component","writtingItems","updatemessagetext","textarea","placeholder","spellcheck","addMessage","TextingAreaContainer","updateMessageTextActionCreator","Dialogs","messagesData","message","componentsData","dialog","chatwrapper","DialogsContainer","User","userWrapper","imgAndBtnWrapper","content","Users","forMapping","usersData","user","usersWrapper","UsersContainer","console","log","follow","userID","followAC","unFollow","unFollowAC","setUsers","setUsersAC","App","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":";8FACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,KAAO,uB,oBCAzFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,YAAc,iCAAiC,OAAS,4BAA4B,mBAAqB,0C,gBCAlKD,EAAOC,QAAU,CAAC,YAAc,4B,oBCAhCD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,cAAgB,4BAA4B,QAAU,sBAAsB,WAAa,2B,iBCArID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,YAAc,+B,gBCAtGD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,cAAgB,mCAAmC,SAAW,gC,uBCAxKD,EAAOC,QAAU,CAAC,QAAU,6B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,QAAU,0B,gBCA9FD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,KAAO,sBAAsB,YAAc,6BAA6B,aAAe,8BAA8B,KAAO,wB,gBCAzLD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,gBCA3DD,EAAOC,QAAU,CAAC,QAAU,2B,kCCA5BD,EAAOC,QAAU,CAAC,aAAe,8B,wECDjCD,EAAOC,QAAU,IAA0B,kC,qGCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2BClBFC,EAAe,CACfC,QAAS,CAAC,CAAEC,GAAI,EAAGC,KAAM,OAAQC,UAAW,6LACpC,CAAEF,GAAI,EAAGC,KAAM,OAAQC,UAAW,wGAClC,CAAEF,GAAI,EAAGC,KAAM,SAAUC,UAAW,iEAC5CC,SAAU,CAAC,SAEXC,eAAgB,IAyBLC,EAvBQ,WAAiC,IAAhCC,EAA+B,uDAAxBR,EAAcS,EAAU,uCACnD,OAAQA,EAAOC,MACX,IAAK,sBACD,IAAIC,EAAS,eAAOH,GAEpB,OADAG,EAAUL,eAAiBG,EAAOG,KAC3BD,EACf,IAAK,eACL,IAAIE,EAAgB,CAChBD,KAAMJ,EAAMF,eACZQ,OAAQ,QACRH,EAAU,eAAIH,GAGlB,OAFAG,EAAUN,SAAV,YAAuBG,EAAMH,UAC7BM,EAAUN,SAASU,KAAKF,GACjBF,EACH,QACI,OAAOH,ICvBfR,EAAe,CACfgB,MAAO,CACH,CACId,GAAI,EACJU,KAAM,8CACNK,WAAY,GACZb,UAAW,2EAEf,CACIF,GAAI,EACJU,KAAM,qIACNK,WAAY,GACZb,UAAW,0DAGnBc,SAAU,IAsCCC,EApCQ,WAAmC,IAAlCX,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAAK,mBACL,IAAIC,EAAS,eAAOH,GAGhB,OAFJG,EAAUO,SAAV,eAAyBV,EAAMU,UAC/BP,EAAUO,SAAWT,EAAOG,KACjBD,EAEX,IAAK,qBACD,IAAIS,EAAO,CACPlB,GAAI,EACJU,KAAMJ,EAAMU,SACZD,WAAY,EACZb,UAAW,2EAEXiB,EAAS,eAAOb,GAIpB,OAHAa,EAAUL,MAAV,YAAsBR,EAAMQ,OAC5BK,EAAUL,MAAMD,KAAKK,GACrBC,EAAUH,SAAW,GACdG,EAEX,QACI,OAAOb,ICvCfR,EAAe,CACXsB,QAAS,CACL,CACJnB,KAAM,YACNC,UAAW,0EACXmB,UAAU,EACVC,MAAO,GAEX,CACIrB,KAAM,SACNC,UAAW,0EACXmB,UAAU,EACVC,MAAQ,KAgBDC,EAZQ,WAAmC,IAAlCjB,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAAK,OAIL,QACI,OAAOF,ICpBfR,EAAe,CACf0B,MAAO,CAAC,CACJC,SAAU,WACVzB,GAAI,IACJ0B,OAAQ,6OACR/B,SAAU,iBACVgC,aAAa,EACbC,UAAW,IAEf,CACIH,SAAU,WACVzB,GAAI,IACJ0B,OAAQ,6OACR/B,SAAU,iBACVgC,aAAa,EACbC,UAAW,MAuCJC,EAhCM,WAAmC,IAAlCvB,EAAiC,uDAAzBR,EAAcS,EAAW,uCACnD,OAAQA,EAAOC,MACX,IA3BO,SA4BJ,IAAIC,EAAU,eAAIH,GAMjB,OALAG,EAAUe,MAAQlB,EAAMkB,MAAMM,KAAI,SAACC,GAC/B,OAAIA,EAAE/B,KAAKO,EAAOP,GAAW,2BAAI+B,GAAX,IAAcJ,aAAa,IAE1CI,KAEJtB,EAEX,IAnCQ,WAoCJ,OAAO,2BAAIH,GAAX,IAAkBkB,MAAOlB,EAAMkB,MAAMM,KAAI,SAACC,GACtC,OAAIA,EAAE/B,KAAKO,EAAOP,GAAW,2BAAI+B,GAAX,IAAcJ,aAAa,IACrCI,OAGpB,IAxCQ,YAyCJ,OAAO,2BAAIzB,GAAX,IAAkBkB,MAAM,GAAD,mBAAMlB,EAAMkB,OAAZ,YAAsBjB,EAAOiB,UAGxD,QAAS,OAAOlB,ICxCpB0B,EAAWC,YAAgB,CAC3BC,YAAajB,EACbkB,YAAa9B,EACb+B,YAAab,EACbc,UAAWC,IAIAC,EAFHC,YAAYR,G,uECATS,EAVA,SAACC,GACZ,OACI,yBAAKC,UAAWC,IAAOC,SACvB,yBAAKC,IAAKJ,EAAMxC,YAGhB,2BAAIwC,EAAMzC,QCMH8C,EAVG,SAACL,GACf,IAAIM,EAAmBN,EAAMtB,QAAQU,KAAI,SAACmB,GAAD,OACzC,kBAAC,EAAD,CAAQhD,KAAMgD,EAAOhD,KAAMC,UAAW+C,EAAO/C,UAAWkB,QAASsB,EAAMtB,QAASE,MAAO2B,EAAO3B,WAC9F,OACI,yBAAKqB,UAAWC,IAAOC,SACnB,mGACHG,I,OCKME,EADYC,aAXN,SAAC7C,GAClB,MAAM,CACFc,QAASd,EAAM8B,YAAYhB,YAIZ,SAACgC,GACpB,MAAM,KAIiBD,CAA6CE,GCUzDC,EAnBA,SAACZ,GACZ,OACI,yBAAKC,UAAWC,IAAOW,QACnB,6BACI,kBAAC,IAAD,CAASC,GAAG,WAAWb,UAAWC,IAAOa,KAAMC,gBAAiBd,IAAOe,QAAvE,iEACA,kBAAC,IAAD,CAASH,GAAG,WAAWb,UAAWC,IAAOa,KAAMC,gBAAiBd,IAAOe,QAAvE,0DACA,kBAAC,IAAD,CAASH,GAAG,SAASb,UAAWC,IAAOa,KAAMC,gBAAiBd,IAAOe,QAArE,wCACA,kBAAC,IAAD,CAASH,GAAG,QAAQb,UAAWC,IAAOa,KAAMC,gBAAiBd,IAAOe,QAApE,8CACA,kBAAC,IAAD,CAASH,GAAG,SAASb,UAAWC,IAAOa,KAAMC,gBAAiBd,IAAOe,QAArE,4EACA,6BACA,yBAAKhB,UAAWC,IAAOa,MAAvB,0DACA,6BACA,6BACA,6BACJ,kBAAC,EAAD,S,mDCKGG,EArBF,SAAClB,GAEV,OACI,yBAAKC,UAAWC,IAAO1B,MACnB,yBAAKyB,UAAWC,IAAOiB,eACnB,yBAAKf,IAAKJ,EAAMxC,UAAW4D,IAAI,KAE/B,2BAAIpB,EAAMhC,OAEd,yBAAKiC,UAAWC,IAAOmB,SACnB,2CACA,yBAAKpB,UAAWC,IAAOoB,YACtBtB,EAAMsB,YAEP,2CACA,kDCSDC,EArBD,SAACvB,GACX,IAAIwB,EAAqBxB,EAAMyB,UAAUrC,KAAI,SAACZ,GAC1C,OAAO,kBAAC,EAAD,CAAMhB,UAAWgB,EAAKhB,UAAWQ,KAAMQ,EAAKR,KAAMsD,WAAY9C,EAAKH,gBAE1EqD,EAAiBC,IAAMC,YAM3B,OACI,yBAAK3B,UAAWC,IAAO9B,OACnB,gFACA,8BAAUyD,SARC,WACf,IAAI7D,EAAO0D,EAAeI,QAAQC,MAClC/B,EAAMgC,aAAahE,IAMmBiE,IAAKP,EAAgBnE,KAAK,GAAGD,GAAG,GAAG4E,KAAK,KAAKC,KAAK,KAAKJ,MAAO/B,EAAM1B,WAEtG,4BAAQ8D,QAASpC,EAAMqC,SAAvB,gGAECb,I,iBCJEc,EAjBK,WAChB,OACI,6BACI,yBAAKrC,UAAWC,IAAOqC,SACnB,yBAAKnC,IAAI,gFAAgFgB,IAAI,MAEjG,yBAAKnB,UAAWC,IAAOsC,aACnB,yBAAKvC,UAAWC,IAAOuC,QAAQ,yBAAKrC,IAAI,kEAAkEgB,IAAI,MAE9G,yBAAKnB,UAAWC,IAAOwC,oBACnB,yBAAKzC,UAAWC,IAAO3C,MAAvB,gBACA,yBAAK0C,UAAWC,IAAOyC,aAAvB,4CCsBLC,EADQnC,aAbF,SAAC7C,GAClB,MAAO,CACHU,SAAUV,EAAM4B,YAAYlB,SAC5BmD,UAAW7D,EAAM4B,YAAYpB,UAGZ,SAACsC,GACtB,MAAM,CACFsB,aAAc,SAAChE,GAAS,IAAIH,EXkBO,SAACG,GAAD,MACtC,CACGF,KAAM,mBACNE,KAAMA,GWrB+B6E,CAA4B7E,GACjE0C,EAAS7C,IACTwE,QAAS,WAAM3B,EXclB,CAAE5C,KAAM,2BWXU2C,CAA6Cc,GCpBrDuB,EARC,SAAC9C,GACjB,OACA,yBAAKC,UAAWC,IAAO6C,aACvB,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,S,iBCDeC,EAPA,WACX,OACI,yBAAK/C,UAAWC,IAAO+C,QACnB,yBAAK7C,IAAI,wDAAwDgB,IAAI,O,iBCYlE8B,EAdI,SAAClD,GAChB,OACI,kBAAC,IAAD,CAASc,GAAI,YAAcd,EAAM1C,IAC7B,yBAAK2C,UAAWC,IAAOa,MACnB,4BACI,4BACI,yBAAKX,IAAKJ,EAAMxC,YACfwC,EAAMzC,U,mCCDhB4F,GAPC,SAACnD,GACb,OACI,yBAAKC,UAAWC,KAAOC,SACnB,2BAAIH,EAAMhC,Q,oBCOPoF,GAVa,WAIxB,OACI,yBAAKnD,UAAWC,KAAOC,SAHL,U,4BCuBXkD,GAtBK,SAACrD,GAClB,IAAIsD,EAAkB3B,IAAMC,YAQ3B,OACA,kBAAC,IAAD,KACI,yBAAK3B,UAAWC,KAAOC,SACf,kBAAC,KAAD,CAAOoD,KAAK,aAAaC,UAAWJ,KACpC,yBAAKnD,UAAWC,KAAOuD,eACvB,8BAAU5B,SATtB,WACG,IAAI7D,EAAOsF,EAAgBxB,QAAQC,MACnC/B,EAAM0D,kBAAkB1F,IAOiBiE,IAAKqB,EAAiBrD,UAAWC,KAAOyD,SACxE5B,MAAO/B,EAAMtC,eAAgBkG,YAAY,6HAAyBC,WAAW,QAAQtG,KAAK,GAAGD,GAAG,GAAG4E,KAAK,KAAKC,KAAK,OAClH,4BAAQC,QAdpB,WACGpC,EAAM8D,eAaG,8DCADC,GAFctD,aAjBP,SAAC7C,GACnB,MAAM,CACNF,eAAgBE,EAAMF,mBAID,SAACgD,GACtB,MAAM,CACNoD,WAAY,WACRpD,EAAS,CAAC5C,KAAK,kBAElB4F,kBAAmB,SAAC1F,GAChB0C,EnBWqC,SAAC1C,GAAD,MACzC,CAAEF,KAAM,sBACLE,KAAMA,GmBbIgG,CAA+BhG,QAKpByC,CAA6C4C,ICa3DY,GAxBC,SAACjE,GAEb,IAAIkE,EAAelE,EAAMvC,SAAS2B,KAAI,SAAC+E,GAAD,OACtC,kBAAC,GAAD,CAASnG,KAAMmG,EAAQnG,UACnBoG,EAAiBpE,EAAM3C,QAAQ+B,KAAI,SAACiF,GAAD,OACtC,kBAAC,EAAD,CAAY9G,KAAM8G,EAAO9G,KAAMD,GAAI+G,EAAO/G,GAAIE,UAAW6G,EAAO7G,eAIjE,OACI,yBAAKyC,UAAWC,IAAOC,SACnB,yBAAKF,UAAWC,IAAO7C,SACnB,yEAEC+G,GAGL,yBAAKnE,UAAWC,IAAOoE,aACtBJ,EACG,kBAAC,GAAD,SCRDK,GAFU9D,aAfH,SAAC7C,GACnB,MAAM,CACFP,QAASO,EAAM6B,YAAYpC,QAC3BI,SAAUG,EAAM6B,YAAYhC,aAMX,SAACiD,GACtB,MAAM,KAKeD,CAA6CwD,I,oBCFvDO,GAdF,SAACxE,GACV,OACA,yBAAKC,UAAWC,KAAOuE,aACnB,yBAAKxE,UAAWC,KAAOwE,kBACnB,yBAAKtE,IAAKJ,EAAMd,UAAWkC,IAAI,KAC/B,2CAEJ,yBAAKnB,UAAWC,KAAOyE,SACnB,uBAAG1E,UAAWC,KAAOnB,UAAWiB,EAAMjB,UACtC,uBAAGkB,UAAWC,KAAOlB,QAASgB,EAAMhB,QACpC,uBAAGiB,UAAWC,KAAOjD,UAAW+C,EAAM/C,a,oBCGnC2H,GAZH,SAAC5E,GAET,IAAI6E,EAAa7E,EAAM8E,UAAU1F,KAAI,SAAC2F,GACnC,OAAO,kBAAC,GAAD,CAAM7F,UAAW6F,EAAK7F,UAAWH,SAAUgG,EAAKhG,SAAUC,OAAQ+F,EAAK/F,OAAQ/B,SAAU8H,EAAK9H,cAExG,OACI,yBAAKgD,UAAWC,KAAO8E,cACzBH,ICmBSI,GAFQxE,aAtBH,SAAC7C,GAIjB,OAFAsH,QAAQC,IAAIvH,GAEL,CACHkH,UAAWlH,EAAM+B,UAAUb,UAIZ,SAAC4B,GACpB,MAAO,CACH0E,OAAQ,SAACC,GACL3E,ErBiCY,SAAC2E,GAAD,MACnB,CAAEvH,KAnDQ,SAmDMR,GAAI+H,GqBlCJC,CAASD,KAEtBE,SAAU,SAACF,GACP3E,ErBgCc,SAAC2E,GAAD,MACrB,CAAEvH,KApDS,WAoDOR,GAAI+H,GqBjCNG,CAAWH,KAExBI,SAAU,SAAC3G,GACP4B,ErB+Bc,SAAC5B,GAAD,MACrB,CAAChB,KArDU,YAqDMgB,MAAMA,GqBhCP4G,CAAW5G,QAIT2B,CAA6CmE,ICCrDe,OAff,SAAa3F,GAEX,OAEI,yBAAKC,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,KAAD,CAAOsD,KAAK,WAAWqC,OAAQ,kBAAI,kBAAC,EAAD,SACnC,kBAAC,KAAD,CAAOrC,KAAK,WAAUqC,OAAQ,kBAAK,kBAAC,GAAD,SACnC,kBAAC,KAAD,CAAOrC,KAAK,SAASqC,OAAQ,kBAAI,kBAAC,GAAD,SACjC,kBAAC,EAAD,QCZRC,IAASD,OACL,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAU/F,MAAOA,GACf,kBAAC,GAAD,QAEkBiG,SAASC,eAAe,S3BoH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrB,QAAQqB,MAAMA,EAAMpC,c","file":"static/js/main.daefaea3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__14mCZ\",\"active\":\"Navbar_active__2WDes\",\"item\":\"Navbar_item__TANHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headPic\":\"ProfileInfo_headPic__2kWRF\",\"infowrapper\":\"ProfileInfo_infowrapper__38Snx\",\"avatar\":\"ProfileInfo_avatar__1a-s_\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__3zxXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"user_userWrapper__1-K7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__2Y85d\",\"imgAndContent\":\"post_imgAndContent__2Xrnc\",\"buttons\":\"post_buttons__2rvGX\",\"numOflikes\":\"post_numOflikes__-zYu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__e8Vwx\",\"dialogs\":\"Dialogs_dialogs__28fO_\",\"chatwrapper\":\"Dialogs_chatwrapper__3g6-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TextingArea_wrapper__2TH6Y\",\"dialogWindow\":\"TextingArea_dialogWindow__3Afb7\",\"writtingItems\":\"TextingArea_writtingItems__3TUqZ\",\"textarea\":\"TextingArea_textarea__LhdGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyFriends_wrapper__34Mji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friend_wrapper__1CKqg\",\"online\":\"Friend_online__2dtqN\",\"offline\":\"Friend_offline__153_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContent\":\"Profile_bodyContent__LKk28\",\"Name\":\"Profile_Name__ZrEZD\",\"description\":\"Profile_description__3Y06x\",\"newpostMaker\":\"Profile_newpostMaker__1q5Xa\",\"wall\":\"Profile_wall__35z1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__s8aC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ePJqt\",\"item\":\"Header_item__iF7ef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__1299O\",\"active\":\"DialogItem_active__2Lmry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper___oweM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Users_usersWrapper__39DJO\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\n    dialogs: [{ id: 1, name: 'Anna', avatarSrc: 'https://fsd.multiurok.ru/viewImage.php?image=http://s.zefirka.net/images/2017-05-01/kak-chelovek-priruchal-i-odomashnival-zhivotnyx/kak-chelovek-priruchal-i-odomashnival-zhivotnyx-6.png' },\n            { id: 2, name: 'Lola', avatarSrc: 'https://yt3.ggpht.com/a/AATXAJxJkwo0-2wjdP6A3BWczaSxZcfEaed-Z7UPk1USGQ=s900-c-k-c0xffffffff-no-rj-mo' },\n            { id: 3, name: 'Adrian', avatarSrc: 'https://montessoriself.ru/wp-content/uploads/2016/05/m17.jpg' }],\n    messages: ['hello'\n            ],\n    messageTexting: ''\n}\nconst dialogsReducer = (state= initialState, action) =>{\n    switch (action.type) {\n        case 'UPDATE-MESSAGE-TEXT':{\n            let copyState = {...state};\n            copyState.messageTexting = action.text;\n            return copyState}\n    case 'SEND-MESSAGE': {\n    let messageObject = {\n        text: state.messageTexting,\n        sender: 'user' }\n    let copyState={...state};\n    copyState.messages=[...state.messages]//!\n    copyState.messages.push(messageObject) \n    return copyState;}\n        default:\n            return state\n    }\n}\nexport const updateMessageTextActionCreator = (text) => \n    ({ type: 'UPDATE-MESSAGE-TEXT',\n        text: text\n    })\n\nexport default dialogsReducer","let initialState = {\n    posts: [\n        {\n            id: 1,\n            text: 'Lorem lor sit amet consece error obcaecati!',\n            likesCount: 12,\n            avatarSrc: 'https://i.pinimg.com/736x/b7/61/b8/b761b89e7349e353c5330af6dbdc0ada.jpg'\n        },\n        {\n            id: 2,\n            text: 'Привет DГубка Бобчанский!',\n            likesCount: 21,\n            avatarSrc: 'https://pbs.twimg.com/media/CWN6WdbWEAAJw8h.jpg:large',\n        },\n    ],\n    posttext: '',\n}\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'UPDATE-POST-TEXT': {\n        let copyState = {...state};\n        copyState.posttext = {...state.posttext}\n        copyState.posttext = action.text;\n            return copyState; }\n\n        case 'CREATE-POST-OBJECT': {\n            let post = {\n                id: 5,\n                text: state.posttext,\n                likesCount: 0,\n                avatarSrc: 'https://i.pinimg.com/736x/b7/61/b8/b761b89e7349e353c5330af6dbdc0ada.jpg'\n            }\n            let copystate = {...state};\n            copystate.posts = [...state.posts];\n            copystate.posts.push(post);\n            copystate.posttext = '';\n            return copystate; }\n\n        default:\n            return state\n\n\n    }\n}\nexport const addPostActionCreator = () =>\n    ({ type: 'CREATE-POST-OBJECT' });\n\nexport const updatePostTextActionCreator = (text) =>\n    ({\n        type: 'UPDATE-POST-TEXT',\n        text: text\n    });\n    \nexport default profileReducer;","let initialState = {\n        friends: [\n            {\n        name: 'Skwidvard',\n        avatarSrc: 'https://i.pinimg.com/736x/b7/61/b8/b761b89e7349e353c5330af6dbdc0ada.jpg',\n        isOnline: true,\n        index: 0,\n        },\n    {\n        name: 'Patrik',\n        avatarSrc: 'https://i.pinimg.com/736x/9e/d9/88/9ed98867ada260f6113e3a62c90b7159.jpg',\n        isOnline: false,\n        index : 1\n    },\n    ]\n};\nconst friendsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'NONE': {\n\n            return state; }\n\n        default:\n            return state\n\n\n    }\n}\nexport default friendsReducer;","const FOLLOW = 'FOLLOW';\nconst UNFOLLOW ='UNFOLLOW';\nconst SET_USERS='SET_USERS';\nlet initialState = {\n    users: [{\n        fullName: 'Dmitry X',\n        id: '1',\n        status: 'Всем здравстуйте! Ищу программиста в команду',\n        location: 'Moscow, Russia',\n        AmIfollowed: false,\n        avatarImg: 22,\n    },\n    {\n        fullName: 'Dmitry X',\n        id: '1',\n        status: 'Всем здравстуйте! Ищу программиста в команду',\n        location: 'Moscow, Russia',\n        AmIfollowed: false,\n        avatarImg: 22,\n    },\n\n]\n\n}\ndebugger\nconst UsersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW: {\n           let copyState={...state};\n            copyState.users = state.users.map((u)=>{\n                if (u.id===action.id){return {...u, AmIfollowed: true}\n            }\n                return u\n            });\n            return copyState\n        }\n        case UNFOLLOW: {\n            return {...state, users: state.users.map((u)=>{\n                if (u.id===action.id){return {...u, AmIfollowed: false}}\n                else return u\n            })}\n        }\n        case SET_USERS: {\n            return {...state, users: [...state.users, ...action.users ]}\n        }\n        \n        default: return state\n    }\n};\n\nexport const followAC = (userID) =>\n    ({ type: FOLLOW, id: userID})\nexport const unFollowAC = (userID) =>\n    ({ type: UNFOLLOW, id: userID })\nexport const setUsersAC = (users) =>\n    ({type:SET_USERS, users:users})\n\nexport default UsersReducer;","import {combineReducers, createStore} from 'redux';\nimport dialogsReducer from './dialogsReducer';\nimport profileReducer from './ProfileReducer';\nimport friendsReducer from './friendsReducer';\nimport usersReducer from './UsersReducer';\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friendsPage: friendsReducer,\n    usersPage: usersReducer\n})\nlet store = createStore(reducers);\n\nexport default store;","import React from 'react';\nimport styles from './Friend.module.css';\nconst Friend = (props) => {\n    return (\n        <div className={styles.wrapper}>\n        <img src={props.avatarSrc}  \n       // className={props.friends.friends[props.index].isOnline? styles.online : styles.offline}\n        /> \n        <p>{props.name}</p>\n        </div>\n        )\n}\nexport default Friend;","import React from 'react';\nimport styles from './MyFriends.module.css';\nimport Friend from './Friend/Friend';\n\nconst MyFrineds = (props) => {\n    let componentsfriend = props.friends.map((friend)=> \n    <Friend name={friend.name} avatarSrc={friend.avatarSrc} friends={props.friends} index={friend.index}/>)\n    return(\n        <div className={styles.wrapper}>\n            <p>Друзья в сети</p>\n        {componentsfriend}\n        </div>\n    )\n}\nexport default MyFrineds;","import {connect} from 'react-redux';\nimport MyFriends from './MyFriends'\n\nlet mapStateToProps =(state)=>{\n    return{\n        friends: state.friendsPage.friends\n    }\n\n}\nlet mapdispatchToProps=(dispatch)=>{\n    return{\n\n    }\n}\nconst MyFriendscontainer = connect(mapStateToProps, mapdispatchToProps)(MyFriends)\nexport default MyFriendscontainer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navbar.module.css';\nimport MyFrineds from './MyFrineds/MyFriends';\nimport MyFriendscontainer from './MyFrineds/MyFriendscontainer';\nconst Navbar = (props) => {\n    return (\n        <div className={styles.navbar}>\n            <nav>\n                <NavLink to='/profile' className={styles.item} activeClassName={styles.active}>Мой профиль</NavLink>\n                <NavLink to='/dialogs' className={styles.item} activeClassName={styles.active}>Сообщения</NavLink>\n                <NavLink to='/music' className={styles.item} activeClassName={styles.active}>Музыка</NavLink>\n                <NavLink to='/news' className={styles.item} activeClassName={styles.active}>Новости</NavLink>\n                <NavLink to='/users' className={styles.item} activeClassName={styles.active}>Пользователи</NavLink>\n                <br />\n                <div className={styles.item}>Настройки</div>\n                <br />\n                <br />\n                <br />\n            <MyFriendscontainer />\n            </nav>\n        </div>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport styles from './post.module.css'\n\nconst Post = (props) => {\n\n    return (\n        <div className={styles.post}>\n            <div className={styles.imgAndContent}>\n                <img src={props.avatarSrc} alt=\"\"></img>\n\n                <p>{props.text}</p>\n            </div>\n            <div className={styles.buttons}>\n                <button>Like it</button>\n                <div className={styles.numOflikes}>\n                {props.numOflikes}\n                </div>\n                <button>Hate it</button>\n                <button>Complain it</button>\n            </div>\n\n        </div>\n    )\n}\nexport default Post","import React from 'react';\nimport styles from './posts.module.css'\nimport ReactDOM from 'react-dom';\nimport Post from './post/post'\nimport {addPostActionCreator} from '../../../redux/ProfileReducer'\nimport {updatePostTextActionCreator} from '../../../redux/ProfileReducer'\nconst Posts = (props) => {\n    let componentsPostData = props.dataposts.map((post) => {\n        return <Post avatarSrc={post.avatarSrc} text={post.text} numOflikes={post.likesCount} />\n    })\n    let newPostElement = React.createRef();\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        props.ontextchange(text);\n    }\n\n    return (\n        <div className={styles.posts}>\n            <p>Мои посты</p>\n            <textarea onChange={onPostChange} ref={newPostElement} name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={props.posttext}></textarea>\n\n            <button onClick={props.addpost}>Добавить на стену</button>\n\n            {componentsPostData}\n        </div>\n    )\n}\nexport default Posts","import React from 'react';\nimport styles from './ProfileInfo.module.css';\nconst ProfileInfo = () => {\n    return (\n        <div>\n            <div className={styles.headPic}>\n                <img src=\"https://pbs.twimg.com/profile_banners/1028740017055838208/1534106006/1500x500\" alt=\"\"></img>\n            </div>\n            <div className={styles.infowrapper}>\n                <div className={styles.avatar}><img src=\"https://look.com.ua/pic/201804/1400x1050/look.com.ua-278323.jpg\" alt=\"\"></img>\n                </div>\n                <div className={styles.descriptionWrapper}>\n                    <div className={styles.name}>Spongebob S.</div>\n                    <div className={styles.description}>I have a square pants and I love it!</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Posts from './Posts'\nimport {addPostActionCreator} from '../../../redux/ProfileReducer'\nimport {updatePostTextActionCreator} from '../../../redux/ProfileReducer'\nimport { connect } from 'react-redux';\n// const PostsContainer = (props) => {\n//     let state = props.store.getState();\n//      let addpost = () => {\n//          props.store.dispatch(addPostActionCreator())\n//      }\n//      let ontextchange = (text) => {\n//         let action = updatePostTextActionCreator(text);\n//         props.store.dispatch(action);\n//      }\n    \n//     return (\n//        <Posts ontextchange={ontextchange} addpost={addpost} \n//        posttext={state.profilePage.posttext} dataposts={state.profilePage.posts}/>\n//     )\n// }\nlet mapStateToProps =(state) =>{\n    return {\n        posttext: state.profilePage.posttext,\n        dataposts: state.profilePage.posts\n    }\n};\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n        ontextchange: (text)=>{ let action = updatePostTextActionCreator(text);\n        dispatch(action)},\n        addpost: ()=>{ dispatch(addPostActionCreator())},\n    }\n}\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\nexport default PostsContainer","import React from 'react';\nimport styles from './Profile.module.css'\nimport Posts from './posts/Posts'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport PostsContainer from './posts/PostsContainer';\n\nconst Profile = (props) => {\nreturn (\n<div className={styles.bodyContent}>\n<ProfileInfo />\n<div>\n<PostsContainer />\n</div>\n</div> )}\nexport default Profile;\n","import React from 'react';\nimport styles from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <div className={styles.header}>\n            <img src=\"http://cdn.onlinewebfonts.com/svg/download_246224.png\" alt=\"\"></img>\n        </div>\n    )\n}\nexport default Header;","import React from 'react';\nimport styles from './DialogItem.module.css';\nimport { NavLink } from \"react-router-dom\"\n\nconst DialogItem = (props) => {\n    return (\n        <NavLink to={'/dialogs/' + props.id}>\n            <div className={styles.item}>\n                <ul>\n                    <li>\n                        <img src={props.avatarSrc}/>\n                        {props.name}\n                    </li>\n                </ul>\n            </div>\n        </NavLink>\n    )\n}\nexport default DialogItem;","import styles from './Message.module.css';\nimport React from 'react';\n\nconst Message = (props) => {\n    return (\n        <div className={styles.wrapper}>\n            <p>{props.text}</p>\n        </div>\n    )\n}\nexport default Message;","import React from 'react';\nimport styles from './Interlocutor.module.css';\n\nconst InterlocutorMessage = () => {\n    let MessagesData = [\n        { id: 1, message: 'Hello' }, {id: 1, message: 'Hello how are u'}, {id: 3, message: 'call u later'}\n    ]\n    return (\n        <div className={styles.wrapper}>\n               {MessagesData[0].message}\n            </div>\n    )\n}\nexport default InterlocutorMessage;","import React from 'react';\nimport InterlocutorMessage from './InterlocutorMassage/InterlocutorMassage';\nimport styles from './TextingArea.module.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nconst TextingArea = (props) => {\n   let messageTextarea = React.createRef();\n    function addMessage(){\n       props.addMessage()\n    }\n    function updatetext(){\n       let text = messageTextarea.current.value\n       props.updatemessagetext(text)\n    }\n    return (\n    <BrowserRouter>\n        <div className={styles.wrapper}>  \n                <Route path='/dialogs/1' component={InterlocutorMessage} />    \n                <div className={styles.writtingItems}>\n                <textarea onChange={updatetext} ref={messageTextarea} className={styles.textarea} \n                value={props.messageTexting} placeholder='Введите ваше сообщение' spellcheck=\"false\" name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n                <button onClick={addMessage}>Отправить</button>\n                </div>\n        </div>\n        </BrowserRouter>\n    )\n}\nexport default TextingArea;","import { connect } from 'react-redux';\nimport TextingArea from './TextingArea';\nimport {updateMessageTextActionCreator} from '../../../redux/dialogsReducer'\nlet mapStateToProps = (state) =>{\n    return{\n    messageTexting: state.messageTexting\n\n    }\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n    addMessage: ()=>{\n        dispatch({type:'SEND-MESSAGE'})\n     },\n     updatemessagetext: (text)=>{\n         dispatch(updateMessageTextActionCreator(text))\n    },\n}\n}\n\nconst TextingAreaContainer = connect(mapStateToProps, mapDispatchToProps)(TextingArea)\n\nexport default TextingAreaContainer;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem';\nimport styles from './Dialogs.module.css'\nimport Message from './Message';\nimport TextingArea from './TextingArea/TextingArea';\nimport TextingAreaContainer from './TextingArea/TextingAreaContainer';\n\n\nconst Dialogs = (props) => {\ndebugger\n    let messagesData = props.messages.map((message)=>\n    <Message text={message.text} />)\n    let componentsData = props.dialogs.map((dialog)=>\n     <DialogItem name={dialog.name} id={dialog.id} avatarSrc={dialog.avatarSrc} />) \n\n\n  \n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.dialogs}>\n                <p>Диалоги</p>\n                \n                {componentsData}\n                \n            </div>\n            <div className={styles.chatwrapper}>\n            {messagesData}\n                <TextingAreaContainer />\n            </div>\n        </div>\n    )\n}\nexport default Dialogs;","import { connect } from 'react-redux';\nimport Dialogs from './Dialogs';\n//import {updateMessageTextActionCreator} from '../../../redux/dialogsReducer'\nlet mapStateToProps = (state) =>{\n    return{\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n\n    }\n    \ndebugger\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n    \n}\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\nexport default DialogsContainer;","import React from 'react'\nimport styles from './user.module.css'\nconst User = (props) => {\n    return(\n    <div className={styles.userWrapper}>\n        <div className={styles.imgAndBtnWrapper}>\n            <img src={props.avatarImg} alt=\"\" />\n            <button>Follow</button>\n        </div>\n        <div className={styles.content}>\n            <p className={styles.fullName}>{props.fullName}</p>\n            <p className={styles.status}>{props.status}</p>\n            <p className={styles.location}>{props.location}</p>\n        </div>\n    </div>   \n    )}\nexport default User","import React from 'react'\nimport User from './User/User'\nimport styles from './Users.module.css'\nconst Users=(props)=>{\n    debugger\n    let forMapping = props.usersData.map((user)=>{\n       return <User avatarImg={user.avatarImg} fullName={user.fullName} status={user.status} location={user.location} />\n    })\n    return(\n        <div className={styles.usersWrapper}>\n     {forMapping}\n        </div>\n    )   \n}\n\nexport default Users","import React from 'react'\nimport { connect } from 'react-redux'\nimport { followAC, unFollowAC, setUsersAC } from '../../redux/UsersReducer'\nimport Users from './Users'\n\nlet mapStateToProps=(state)=>{\n    debugger\n    console.log(state)\n    debugger\n    return {\n        usersData: state.usersPage.users\n    }\n    \n}\nlet mapDispatchToProps=(dispatch)=>{\n    return {\n        follow: (userID)=>{\n            dispatch(followAC(userID))\n        },\n        unFollow: (userID)=>{\n            dispatch(unFollowAC(userID))\n        },\n        setUsers: (users)=>{\n            dispatch(setUsersAC(users))\n        }\n    }\n}\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\n\nexport default UsersContainer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from '../src/conponents/Navbar/Navbar';\nimport Profile from '../src/conponents/Profile/Profile';\nimport Header from '../src/conponents/Header/Header';\nimport Dialogs from './conponents/Dialogs/Dialogs';\nimport Music from './conponents/Music/Music';\nimport { Route } from 'react-router-dom';\nimport DialogsContainer from './conponents/Dialogs/DialogsContainer';\nimport Users from './conponents/Users/Users';\nimport UsersContainer from './conponents/Users/UsersContainer';\n\nfunction App(props) {\n\n  return (\n\n      <div className=\"wrapper\">\n        <Header />\n        <Route path='/profile' render={()=><Profile />  }/>\n        <Route path='/dialogs'render={()=> <DialogsContainer /> }/>\n        <Route path='/users' render={()=><UsersContainer />}/>\n        <Navbar />\n      </div>\n\n  );\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n      </BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}