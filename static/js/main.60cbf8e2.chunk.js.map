{"version":3,"sources":["serviceWorker.js","redux/dialogsReducer.js","api/api.js","redux/ProfileReducer.js","redux/friendsReducer.js","redux/UsersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","conponents/Dialogs/DialogItem/DialogItem.jsx","conponents/Dialogs/Message.jsx","conponents/Dialogs/TextingArea/InterlocutorMassage/InterlocutorMassage.jsx","conponents/Dialogs/TextingArea/TextingArea.jsx","conponents/Dialogs/TextingArea/TextingAreaContainer.js","conponents/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","conponents/Dialogs/DialogsContainer.jsx","conponents/Users/pagesLine/PagesLine.jsx","conponents/Users/Users.jsx","common/Preloader.jsx","conponents/Users/UsersContainer.jsx","conponents/Profile/ProfileInfo/Status/Status.jsx","conponents/Profile/ProfileInfo/ProfileInfo.jsx","conponents/Profile/posts/post/post.jsx","conponents/Profile/posts/posts.jsx","conponents/Profile/posts/PostsContainer.jsx","conponents/Profile/Profile.js","conponents/Profile/ProfileContainer.js","conponents/Login/Login.jsx","conponents/Navbar/MyFrineds/Friend/Friend.jsx","conponents/Navbar/MyFrineds/MyFriends.jsx","conponents/Navbar/MyFrineds/MyFriendscontainer.js","conponents/Navbar/Navbar.js","conponents/Navbar/NavbarContainer.js","conponents/Header/Header.js","conponents/Header/HeaderContainer.js","conponents/Login/LoginContainer.jsx","App.js","index.js","conponents/Navbar/Navbar.module.css","conponents/Profile/ProfileInfo/ProfileInfo.module.css","conponents/Users/pagesLine/PagesLine.module.css","assets/images/user.png","conponents/Login/styles.module.css","conponents/Users/Users.module.css","conponents/Profile/posts/post/post.module.css","conponents/Dialogs/Dialogs.module.css","conponents/Dialogs/TextingArea/TextingArea.module.css","conponents/Profile/posts/posts.module.css","conponents/Header/Header.module.css","conponents/Dialogs/DialogItem/DialogItem.module.css","conponents/Dialogs/Message.module.css","assets/images/Dual Ring-1.9s-200px.svg","conponents/Profile/Profile.module.css","conponents/Navbar/MyFrineds/MyFriends.module.css","conponents/Navbar/MyFrineds/Friend/Friend.module.css","logo.svg"],"names":["Boolean","window","location","hostname","match","initialState","dialogs","id","name","avatarSrc","messages","messageTexting","dialogsReducer","state","action","type","copyState","text","messageObject","sender","push","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","posts","likesCount","profile","isFetching","setProfile","setFetching","setStatusAC","profileReducer","photos","small","userPhoto","copystate","unshift","friends","isOnline","index","friendsReducer","users","totalUsersCount","followingInProgress","toggleFetching","setCurrentPage","followSucceed","userID","unFollowSucceed","setUsers","setTotalCount","totalCount","toggleFollowingProgress","UsersReducer","map","u","followed","filter","login","isAuth","setAuthData","payload","getUserAuth","dispatch","a","console","log","resultCode","authReducer","isInitialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","friendsPage","usersPage","usersReducer","auth","app","store","createStore","applyMiddleware","thunkMiddleware","DialogItem","props","to","className","styles","item","src","Message","wrapper","InterlocutorMessage","TextingArea","messageTextarea","React","createRef","path","component","writtingItems","onChange","current","value","updatemessagetext","ref","textarea","placeholder","spellcheck","cols","rows","onClick","addMessage","TextingAreaContainer","connect","updateMessageTextActionCreator","Dialogs","messagesData","message","componentsData","dialog","chatwrapper","mapStateToPropsForRedirect","withAuthRedirect","Component","compose","PagesLine","useState","portion","setportion","pagesCount","Math","ceil","totalItemsCount","portionCount","pages","i","active","pageItem","page","getUsers","forShowArray","slice","disabled","disapear","Users","usersWrapper","key","eachUser","some","setUnFollow","setFollow","username","Preloader","preloader","UsersContainer","onPageChanged","pageNumber","this","items","Status","formik","useFormik","initialValues","onSubmit","values","updateStatus","seteditMode","editMode","statusWrapper","handleChange","onBlur","handleSubmit","autoFocus","ProfileInfo","headPic","alt","infowrapper","avatar","large","descriptionWrapper","fullName","description","job","lookingForAJob","Post","imgAndContent","buttons","numOflikes","Posts","postText","addPost","validate","errors","componentsPostData","dataposts","autorizedUserId","error","PostsContainer","posttext","Profile","bodyContent","ProfileContainer","params","getProfile","getStatus","withRouter","Login","getLogin","touched","test","head","for","handleBlur","btn","Friend","MyFrineds","componentsfriend","friend","MyFriendscontainer","MyFriends","Navbar","navbar","activeClassName","Header","header","getLogout","history","initializeApp","useEffect","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.60cbf8e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\n    dialogs: [{ id: 1, name: 'Anna', avatarSrc: 'https://fsd.multiurok.ru/viewImage.php?image=http://s.zefirka.net/images/2017-05-01/kak-chelovek-priruchal-i-odomashnival-zhivotnyx/kak-chelovek-priruchal-i-odomashnival-zhivotnyx-6.png' },\n            { id: 2, name: 'Lola', avatarSrc: 'https://yt3.ggpht.com/a/AATXAJxJkwo0-2wjdP6A3BWczaSxZcfEaed-Z7UPk1USGQ=s900-c-k-c0xffffffff-no-rj-mo' },\n            { id: 3, name: 'Adrian', avatarSrc: 'https://montessoriself.ru/wp-content/uploads/2016/05/m17.jpg' }],\n    messages: ['hello'\n            ],\n    messageTexting: ''\n}\nconst dialogsReducer = (state= initialState, action) =>{\n    switch (action.type) {\n        case 'UPDATE-MESSAGE-TEXT':{\n            let copyState = {...state};\n            copyState.messageTexting = action.text;\n            return copyState}\n    case 'SEND-MESSAGE': {\n    let messageObject = {\n        text: state.messageTexting,\n        sender: 'user' }\n    let copyState={...state};\n    copyState.messages=[...state.messages]//!\n    copyState.messages.push(messageObject) \n    return copyState;}\n        default:\n            return state\n    }\n}\nexport const updateMessageTextActionCreator = (text) => \n    ({ type: 'UPDATE-MESSAGE-TEXT',\n        text: text\n    })\n\nexport default dialogsReducer","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"a37d76b8-f757-4ade-b7a2-1a76f12fe03e\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 5) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}","import { profileAPI } from \"../api/api\";\nimport userPhoto from '../assets/images/user.png'\n\nconst SET_PROFILE='SET_PROFILE'\nconst SET_STATUS='SET_STATUS'\nconst SET_FETCHING='SET_FETCHING'\n\nlet initialState = {\n    posts: [\n        {\n            id: 1,\n            text: 'Lorem lor sit amet consece error obcaecati!',\n            likesCount: 12,\n            avatarSrc: 'https://i.pinimg.com/736x/b7/61/b8/b761b89e7349e353c5330af6dbdc0ada.jpg'\n        },\n        {\n            id: 2,\n            text: 'Привет DГубка Бобчанский!',\n            likesCount: 21,\n            avatarSrc: 'https://pbs.twimg.com/media/CWN6WdbWEAAJw8h.jpg:large',\n        },\n    ],\n    profile: null,\n    status: null,\n    isFetching: false\n}\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_PROFILE:{\n            return {...state, profile:action.profile}\n        }\n        case SET_STATUS:{\n            return {...state, status: action.status}\n        }\n        case SET_FETCHING:{\n            return{...state, isFetching: action.isFetching}\n        }\n\n        case 'CREATE-POST-OBJECT': {\n            let post = {\n                id: 5,\n                text: action.text,\n                likesCount: 0,\n                avatarSrc: state.profile.photos.small?state.profile.photos.small: userPhoto\n            }\n            let copystate = {...state};\n            copystate.posts = [...state.posts];\n            copystate.posts.unshift(post);\n            return copystate; }\n\n        default:\n            return state\n\n\n    }\n}\n//thunks creators\nexport const getProfile=(id)=> async (dispatch)=>{\ndispatch(setFetching(true))\ndebugger\nlet response = await profileAPI.getProfile(id)\ndispatch(setFetching(false))\ndispatch(setProfile(response.data))\n}\nexport const getStatus=(id)=> async (dispatch)=>{\n    let response = await profileAPI.getStatus(id)\n    debugger\n    dispatch(setStatusAC(response.data))\n}\nexport const updateStatus=(status)=>async (dispatch)=>{\ndispatch(setFetching(true))\ndebugger\nlet response = await profileAPI.updateStatus(status);\ndebugger\ndispatch(setFetching(false))\nif (response.data.resultCode==0){\ndispatch(setStatusAC(status))\n}\n}\n//actions creators\nexport const addPost = (text) =>\n    ({ type: 'CREATE-POST-OBJECT',text });\n\nexport const setProfile =(profile)=>\n({type:SET_PROFILE, profile})\nexport const setFetching =(isFetching)=>\n({type:SET_FETCHING, isFetching })\nexport const setStatusAC = (status)=>\n({type: SET_STATUS, status})\n    \nexport default profileReducer;","let initialState = {\n        friends: [\n            {\n        name: 'Skwidvard',\n        avatarSrc: 'https://i.pinimg.com/736x/b7/61/b8/b761b89e7349e353c5330af6dbdc0ada.jpg',\n        isOnline: true,\n        index: 0,\n        },\n    {\n        name: 'Patrik',\n        avatarSrc: 'https://i.pinimg.com/736x/9e/d9/88/9ed98867ada260f6113e3a62c90b7159.jpg',\n        isOnline: false,\n        index : 1\n    },\n    ]\n};\nconst friendsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'NONE': {\n\n            return state; }\n\n        default:\n            return state\n\n\n    }\n}\nexport default friendsReducer;","import { usersAPI } from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW ='UNFOLLOW';\nconst SET_USERS='SET_USERS';\nconst TOGGLE_IS_FOLLOWING_PROGRESS='TOGGLE_IS_FOLLOWING_PROGRESS';\nconst TOGGLE_FETCHING='TOGGLE_FETCHING';\nconst SET_CURRENT_PAGE='SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT='SET_TOTAL_COUNT';\n\nlet initialState = {\n    users: [ ],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n};\n\n\n\nconst UsersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW: {\n           let copyState={...state};\n            copyState.users = state.users.map((u)=>{\n                if (u.id===action.id){return {...u, followed: true}\n            }\n                return u\n            });\n            return copyState\n        }\n        case UNFOLLOW: {\n            return {...state, users: state.users.map((u)=>{\n                if (u.id===action.id){return {...u, followed: false}}\n                else return u\n            })}\n        }\n        case SET_USERS: {\n            return {...state, users: [...action.users ], totalUsersCount: action.totalCount}\n        }\n        case SET_TOTAL_COUNT: {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case TOGGLE_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        \n        default: return state\n    }\n};\nexport const toggleFetching = (isFetching) => \n({type: TOGGLE_FETCHING, isFetching })\n\nexport const getUsers = (page)=> async (dispatch)=>{\ndispatch(toggleFetching(true))\nlet response = await usersAPI.getUsers(page)\ndispatch(setUsers(response.items))\ndispatch(setTotalCount(response.totalCount))\ndispatch(setCurrentPage(page))\ndispatch(toggleFetching(false))\n}\nexport const setFollow=(id)=>async (dispatch)=>{\ndispatch(toggleFollowingProgress(true, id));\nlet response = await usersAPI.follow(id);\nif (response.data.resultCode==0) {\n    dispatch(toggleFollowingProgress(false, id))\n    dispatch(followSucceed(id))\n}}\nexport const setUnFollow=(id)=>async (dispatch)=>{\ndispatch(toggleFollowingProgress(true, id));\nlet response = await usersAPI.unfollow(id);\nif (response.data.resultCode==0) {\n    dispatch(toggleFollowingProgress(false, id))\n    dispatch(unFollowSucceed(id))\n}\n}\nexport const setCurrentPage = (currentPage=1) => \n({type: SET_CURRENT_PAGE, currentPage })\nexport const followSucceed = (userID) =>\n    ({ type: FOLLOW, id: userID})\nexport const unFollowSucceed = (userID) =>\n    ({ type: UNFOLLOW, id: userID })\nexport const setUsers = (users) =>\n    ({type:SET_USERS, users})\nexport const setTotalCount = (totalUsersCount) =>\n    ({type:SET_TOTAL_COUNT, totalCount:totalUsersCount})\nexport const toggleFollowingProgress = (isFetching, userId) => \n({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\nexport default UsersReducer;","import { authAPI } from \"../api/api\"\n\nconst SET_AUTH_DATA='SET_AUTH_DATA'\nconst SET_FETCHING='SET_FETCHING'\n\nlet initialState = {\n    id: null,\n    login: null,\n    email: null,\n    isAuth: false,\n    isFetching: false\n}\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_DATA : {\n            return {...state, ...action.payload}\n        }\n        case SET_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        default:\n            return state\n    }\n}\n\nexport const setAuthData =(id, login, email, isAuth)=>{\n    return {type: SET_AUTH_DATA, payload: {email, id, login, isAuth}}\n}\nexport const setFetching = (isFetching)=>{\n    return {type: SET_FETCHING, isFetching}\n}\n\nexport const getUserAuth = ()=> async (dispatch)=>{\nlet response = await authAPI.me();\nconsole.log(response)\nif (response.data.resultCode === 0) {\nlet {id, login, email} = response.data.data;\ndispatch(setAuthData(id, login, email, true))\n}\nreturn response };\n\nexport const getLogin=(email, password, rememberMe)=>async (dispatch)=>{\ndispatch(setFetching(true));\nlet response = await authAPI.login(email, password, rememberMe)\ndispatch(setFetching(false));\nif(response.data.resultCode==0){\n    dispatch(getUserAuth())\n} else {console.log('нужно показать ошибку в самой форме')}\n}\nexport const getLogout=()=>async(dispatch)=>{\n    debugger\nlet response = await authAPI.logout();\ndebugger\nif (response.data.resultCode==0){\n    dispatch(setAuthData(null, null, null, false))\n}\n}\n\nexport default authReducer","import { getUserAuth } from \"./authReducer\";\n\nconst INITIALIZED_SUCCEED='INITIALIZED_SUCCEED'\n\nlet initialState = {\n  isInitialized: false\n};\n\n\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case INITIALIZED_SUCCEED :{\n        return {...state, isInitialized: true}\n    }\n    default:\n        return state\n     \n    }\n};\nconst initializedSucceed=()=> \n({type: INITIALIZED_SUCCEED})\n\nexport const initializeApp=()=>(dispatch)=>{\nlet promise = dispatch(getUserAuth())\npromise.then(()=>{dispatch(initializedSucceed())})\n}\n\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport dialogsReducer from './dialogsReducer';\nimport profileReducer from './ProfileReducer';\nimport friendsReducer from './friendsReducer';\nimport usersReducer from './UsersReducer';\nimport authReducer from './authReducer';\nimport thunkMiddleware from 'redux-thunk'\nimport appReducer from './appReducer';\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friendsPage: friendsReducer,\n    usersPage: usersReducer,\n    auth: authReducer, \n    app: appReducer\n})\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport styles from './DialogItem.module.css';\nimport { NavLink } from \"react-router-dom\"\n\nconst DialogItem = (props) => {\n    return (\n        <NavLink to={'/dialogs/' + props.id}>\n            <div className={styles.item}>\n                <ul>\n                    <li>\n                        <img src={props.avatarSrc}/>\n                        {props.name}\n                    </li>\n                </ul>\n            </div>\n        </NavLink>\n    )\n}\nexport default DialogItem;","import styles from './Message.module.css';\nimport React from 'react';\n\nconst Message = (props) => {\n    return (\n        <div className={styles.wrapper}>\n            <p>{props.text}</p>\n        </div>\n    )\n}\nexport default Message;","import React from 'react';\nimport styles from './Interlocutor.module.css';\n\nconst InterlocutorMessage = () => {\n    let MessagesData = [\n        { id: 1, message: 'Hello' }, {id: 1, message: 'Hello how are u'}, {id: 3, message: 'call u later'}\n    ]\n    return (\n        <div className={styles.wrapper}>\n               {MessagesData[0].message}\n            </div>\n    )\n}\nexport default InterlocutorMessage;","import React from 'react';\nimport InterlocutorMessage from './InterlocutorMassage/InterlocutorMassage';\nimport styles from './TextingArea.module.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nconst TextingArea = (props) => {\n   let messageTextarea = React.createRef();\n    function addMessage(){\n       props.addMessage()\n    }\n    function updatetext(){\n       let text = messageTextarea.current.value\n       props.updatemessagetext(text)\n    }\n    return (\n    <BrowserRouter>\n        <div className={styles.wrapper}>  \n                <Route path='/dialogs/1' component={InterlocutorMessage} />    \n                <div className={styles.writtingItems}>\n                <textarea onChange={updatetext} ref={messageTextarea} className={styles.textarea} \n                value={props.messageTexting} placeholder='Введите ваше сообщение' spellcheck=\"false\" name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n                <button onClick={addMessage}>Отправить</button>\n                </div>\n        </div>\n        </BrowserRouter>\n    )\n}\nexport default TextingArea;","import { connect } from 'react-redux';\nimport TextingArea from './TextingArea';\nimport {updateMessageTextActionCreator} from '../../../redux/dialogsReducer'\nlet mapStateToProps = (state) =>{\n    return{\n    messageTexting: state.messageTexting\n\n    }\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n    addMessage: ()=>{\n        dispatch({type:'SEND-MESSAGE'})\n     },\n     updatemessagetext: (text)=>{\n         dispatch(updateMessageTextActionCreator(text))\n    },\n}\n}\n\nconst TextingAreaContainer = connect(mapStateToProps, mapDispatchToProps)(TextingArea)\n\nexport default TextingAreaContainer;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem';\nimport styles from './Dialogs.module.css'\nimport Message from './Message';\nimport TextingArea from './TextingArea/TextingArea';\nimport TextingAreaContainer from './TextingArea/TextingAreaContainer';\n\n\nconst Dialogs = (props) => {\n    let messagesData = props.messages.map((message)=>\n    <Message text={message.text} />)\n    let componentsData = props.dialogs.map((dialog)=>\n     <DialogItem name={dialog.name} id={dialog.id} avatarSrc={dialog.avatarSrc} />) \n\n\n  \n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.dialogs}>\n                <p>Диалоги</p>\n                \n                {componentsData}\n                \n            </div>\n            <div className={styles.chatwrapper}>\n            {messagesData}\n                <TextingAreaContainer />\n            </div>\n        </div>\n    )\n}\nexport default Dialogs;","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component)=>{\n    const RedirectedComponent=(props)=>{\n        if (!props.isAuth) return <Redirect to='/login' />\n        return <Component {...props}/>\n    }\n    let connectedRedirectedComponent= connect(mapStateToPropsForRedirect)(RedirectedComponent)\n    return connectedRedirectedComponent\n}","import { connect } from 'react-redux';\nimport React from 'react'\nimport { compose } from 'redux';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nlet mapStateToProps = (state) =>{\n    return{\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n    }\n}\nconst DialogsContainer = props =>  <Dialogs {...props}/> \n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps))(DialogsContainer) ","import React, { useState } from 'react'\nimport styles from './PagesLine.module.css'\n\nconst PagesLine =(props)=>{\n    const [portion, setportion] = useState(1)\n    let portionSize = 10\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n    let portionCount = pagesCount / portionSize\n    let pages = [];\n    let onPageClick = (page) =>{props.getUsers(page)}\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(<a className={i==props.currentPage? styles.active: styles.pageItem} onClick={()=>{onPageClick(i)}}>{i+' '}</a>);\n        }\n    let forShowArray = pages.slice((portion-1)*portionSize, portion*portionSize);\n\nreturn (<div className={styles.wrapper}>\n    <button onClick={()=>{setportion(portion-1)}} disabled={portion==1? styles.disapear: ''}>Предыдущие</button>\n    <div className={styles.pages}>\n    {forShowArray}\n    </div>\n    <button onClick={()=>{setportion(portion+1)}} className={portion==portionCount? styles.disapear: ''}>Следующие</button>\n</div>)\n}\nexport default PagesLine","import React from 'react';\nimport styles from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport PagesLine from './pagesLine/PagesLine';\n\nlet Users = (props) => {\n\n\n\n\n    return <div className={styles.usersWrapper\n    }>\n        <PagesLine getUsers={props.getUsers} totalItemsCount={props.totalUsersCount} \n        currentPage={props.currentPage} pageSize={props.pageSize}/>\n        <div>\n        </div>\n        {\n            props.users.map(u => <div key={u.id} className={styles.eachUser}>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + u.id}>\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {u.followed\n                            ? <button disabled={props.followingInProgress\n                                .some(id => id === u.id)}\n                                      onClick={() => { props.setUnFollow(u.id) }}>\n                                Unfollow</button>\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)}\n                                      onClick={() => { props.setFollow(u.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                        <div className={styles.username}>{u.name}</div>\n                        <div>{u.status}</div>\n                </span>\n            </div>)\n        }\n    </div>\n}\n\nexport default Users;","import React from 'react'\nimport preloader from '../assets/images/Dual Ring-1.9s-200px.svg'\nconst Preloader =()=>{\n    return (\n        <div>\n            <img src={preloader} />\n        </div>\n    )\n}\n\nexport default Preloader","import React from 'react'\nimport {compose} from 'redux'\nimport { connect } from 'react-redux'\nimport { setFollow, setUnFollow, setCurrentPage, toggleFollowingProgress,\n    getUsers} from '../../redux/UsersReducer'\nimport Users from './Users'\nimport Preloader from '../../common/Preloader'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers();\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n        return <div>\n            {this.props.isFetching &&<Preloader />}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                        pageSize={this.props.pageSize}\n                        currentPage={this.props.currentPage}\n                        onPageChanged={this.onPageChanged}\n                        users={this.props.users}\n                        getUsers={this.props.getUsers}\n                        setFollow={this.props.setFollow}\n                        setUnFollow={this.props.setUnFollow}\n                        followingInProgress={this.props.followingInProgress}\n             />\n        </div>\n    }\n}\n\n/*let mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}*/\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps,{setFollow, setUnFollow, setCurrentPage, toggleFollowingProgress, getUsers })\n)(UsersContainer)","import { useFormik } from 'formik'\nimport React, { useState } from 'react'\nimport Preloader from '../../../../common/Preloader'\nimport styles from './status.module.css'\n\nconst Status = (props) =>{\n    const [status, setstatus] = useState(props.status)\n    const formik = useFormik({\n        initialValues: {\n            status: status\n        },\n        onSubmit: (values)=>{props.updateStatus(values.status);\n        seteditMode(false)}\n    })\n    const [editMode, seteditMode] = useState(false)\n    console.log(props)\n    if (props.isFetching){return <Preloader />}\n    return (\n        <div className={styles.statusWrapper}>\n            \n            {editMode?<div><input name='status' onChange={formik.handleChange} \n            onBlur={formik.handleSubmit} autoFocus={true} value={formik.values.status} /> \n            <button onClick={()=>{seteditMode(false)}}>Не изменять</button></div>:<span onClick={()=>{seteditMode(true)}}> \n            {props.status} </span>}\n        </div>\n    )\n}\n\nexport default Status","import React from 'react';\nimport styles from './ProfileInfo.module.css';\nimport userPhoto from '../../../assets/images/user.png'\nimport Status from './Status/Status';\nconst ProfileInfo = (props) => {\n    console.log(props)\n    return (\n        <div>\n            <div className={styles.headPic}>\n                <img src=\"https://pbs.twimg.com/profile_banners/1028740017055838208/1534106006/1500x500\" alt=\"\"></img>\n            </div>\n            <div className={styles.infowrapper}>\n                <div className={styles.avatar}><img src={props.profile.photos.large? props.profile.photos.large : userPhoto} alt=\"\"></img>\n                </div>\n                <div className={styles.descriptionWrapper}>\n                    <div className={styles.name}>{props.profile.fullName}</div>\n                    <Status  {...props}/>\n                    <br/>\n                    <div className={styles.description}><span className={styles.job}>{props.profile.lookingForAJob? '[Сейчас ищет работу]': '[Сейчас не ищет работу]'}</span></div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","import React from 'react';\nimport styles from './post.module.css'\n\nconst Post = (props) => {\n\n    return (\n        <div className={styles.post}>\n            <div className={styles.imgAndContent}>\n                <img src={props.avatarSrc} alt=\"\"></img>\n\n                <p>{props.text}</p>\n            </div>\n            <div className={styles.buttons}>\n                <button>Like it</button>\n                <div className={styles.numOflikes}>\n                {props.numOflikes}\n                </div>\n                <button>Hate it</button>\n                <button>Complain it</button>\n            </div>\n\n        </div>\n    )\n}\nexport default Post","import React from \"react\";\nimport styles from \"./posts.module.css\";\n//import ReactDOM from 'react-dom';\nimport Post from \"./post/post\";\nimport { useFormik } from \"formik\";\n\nconst Posts = (props) => {\n  const formik = useFormik({\n    initialValues: {postText: ''},\n    onSubmit: (values)=>{props.addPost(values.postText)},\n    validate: values =>{\n        let errors ={};\n        if (!values.postText){\n            errors.postText = 'requered'\n        }\n        return errors\n    }\n  });\n  let componentsPostData = props.dataposts.map((post) => {\n    return (\n      <Post\n        avatarSrc={post.avatarSrc}\n        text={post.text}\n        numOflikes={post.likesCount}\n      />\n    );\n  });\nconsole.log(formik.errors)\n  return (\n    <div className={styles.posts}>\n      <p>{props.userId==props.autorizedUserId?'Мои посты':'Посты пользователя'}</p>\n      <form action=\"\">\n      <textarea disabled={!props.userId}\n        onChange={formik.handleChange}\n        name=\"postText\"\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n        value={formik.values.postText}\n      ></textarea>\n      {(formik.errors.postText)? <span className={styles.error}>{formik.errors.postText}</span>:''}\n\n      <button onClick={formik.handleSubmit}>Добавить на стену</button>\n      </form>\n\n      {componentsPostData}\n    </div>\n  );\n};\nexport default Posts;\n","import React from 'react';\nimport Posts from './posts'\nimport {addPost} from '../../../redux/ProfileReducer'\nimport {updatePostTextActionCreator} from '../../../redux/ProfileReducer'\nimport { connect } from 'react-redux';\n// const PostsContainer = (props) => {\n//     let state = props.store.getState();\n//      let addpost = () => {\n//          props.store.dispatch(addPostActionCreator())\n//      }\n//      let ontextchange = (text) => {\n//         let action = updatePostTextActionCreator(text);\n//         props.store.dispatch(action);\n//      }\n    \n//     return (\n//        <Posts ontextchange={ontextchange} addpost={addpost} \n//        posttext={state.profilePage.posttext} dataposts={state.profilePage.posts}/>\n//     )\n// }\nlet mapStateToProps =(state) =>{\n    return {\n        posttext: state.profilePage.posttext,\n        dataposts: state.profilePage.posts,\n        autorizedUserId: state.auth.id,\n        userId: state.profilePage.profile.userId\n    }\n};\n\n\nconst PostsContainer = connect(mapStateToProps, {addPost})(Posts)\nexport default PostsContainer","import React from 'react';\nimport styles from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport PostsContainer from './posts/PostsContainer';\nimport Preloader from '../../common/Preloader';\n\nconst Profile = (props) => {\n    if (!props.profile) { return (\n    <div><Preloader /></div>)    \n    }\nreturn (\n<div className={styles.bodyContent}>\n<ProfileInfo isFetching ={props.isFetching} updateStatus={props.updateStatus} \nstatus={props.status} profile={props.profile}/>\n<div>\n<PostsContainer userId={props.profile.userId} />\n</div>\n</div> )}\nexport default Profile;\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport {getProfile, getStatus, updateStatus} from '../../redux/ProfileReducer'\nimport Profile from './Profile'\n\n\nclass ProfileContainer extends React.Component{\n    componentDidMount(){\n        let userId= this.props.match.params.id\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n        this.props.getStatus(userId)\n    }\nrender(){\n  return (  \n  <div>\n        <Profile {...this.props} profile={this.props.profile}/>\n    </div>\n  )\n}\n}\nlet mapStateToProps=(state)=>{\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        isFetching: state.profilePage.isFetching\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    withRouter,\n    connect(mapStateToProps,{getProfile, getStatus, updateStatus})\n    )(ProfileContainer)","import { connect, useFormik } from 'formik'\nimport React from 'react'\nimport styles from './styles.module.css'\nimport {getLogin} from '../../redux/authReducer'\nimport Preloader from '../../common/Preloader'\nimport { Redirect } from 'react-router-dom'\n \nconst Login =(props)=>{\n    console.log(props)\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false},\n        onSubmit: (values)=>{props.getLogin(values.email, values.password, values.rememberMe)},\n        validate: values =>{\n            let errors ={};\n            if (formik.touched.password && !values.password){errors.password='Поле не должно быть пустым'}\n\n            if (!values.email){\n                errors.email = 'Поле не должно быть пустым'\n            } else if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){errors.email='Некорректная почта'}\n    \n            return errors\n        }\n      })\n      if (props.isFetching){return <Preloader />}\n      if (props.isAuth){return <Redirect to='profile'/>}\n    return(\n        <div className={styles.wrapper}> \n        <span className={styles.head}>АВТОРИЗАЦИЯ</span>\n        <br/>\n        <br/>\n            <form action=\"\">\n\n                <label for=\"email\" >Ваша почта</label>\n                <br/>\n                <input onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.email} type=\"text\" name='email' id='email' /> <br/>\n                <span className={styles.error}>{formik.errors.email}</span>\n                <br/>\n                <label for=\"password\" >Пароль</label>\n                <br/>\n                <input onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.password} type=\"password\" name='password' id='password' /> <br/>\n                <span className={styles.error}>{formik.errors.password}</span>\n                <br/>\n                <br/>\n                <input onChange={formik.handleChange} value={formik.values.rememberMe} id='check' name='rememberMe' type=\"checkbox\"/> <label for=\"check\">Запомнить меня</label>\n                <br/>\n                <button onClick={formik.handleSubmit} className={styles.btn}>Войти</button>\n            </form>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default Login;","import React from 'react';\nimport styles from './Friend.module.css';\nconst Friend = (props) => {\n    return (\n        <div className={styles.wrapper}>\n        <img src={props.avatarSrc}  \n       // className={props.friends.friends[props.index].isOnline? styles.online : styles.offline}\n        /> \n        <p>{props.name}</p>\n        </div>\n        )\n}\nexport default Friend;","import React from 'react';\nimport styles from './MyFriends.module.css';\nimport Friend from './Friend/Friend';\n\nconst MyFrineds = (props) => {\n    let componentsfriend = props.friends.map((friend)=> \n    <Friend name={friend.name} avatarSrc={friend.avatarSrc} friends={props.friends} index={friend.index}/>)\n    return(\n        <div className={styles.wrapper}>\n            <p>Друзья в сети</p>\n        {componentsfriend}\n        </div>\n    )\n}\nexport default MyFrineds;","import {connect} from 'react-redux';\nimport MyFriends from './MyFriends'\n\nlet mapStateToProps =(state)=>{\n    return{\n        friends: state.friendsPage.friends\n    }\n\n}\nlet mapdispatchToProps=(dispatch)=>{\n    return{\n\n    }\n}\nconst MyFriendscontainer = connect(mapStateToProps, mapdispatchToProps)(MyFriends)\nexport default MyFriendscontainer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navbar.module.css';\nimport MyFrineds from './MyFrineds/MyFriends';\nimport MyFriendscontainer from './MyFrineds/MyFriendscontainer';\nconst Navbar = (props) => {\n    return (\n        <div className={styles.navbar}>\n            <nav>\n                <NavLink to={`/profile/${props.id}`} className={styles.item} activeClassName={styles.active}>Мой профиль</NavLink>\n                <NavLink to='/dialogs' className={styles.item} activeClassName={styles.active}>Сообщения</NavLink>\n                <NavLink to='/music' className={styles.item} activeClassName={styles.active}>Музыка</NavLink>\n                <NavLink to='/news' className={styles.item} activeClassName={styles.active}>Новости</NavLink>\n                <NavLink to='/users' className={styles.item} activeClassName={styles.active}>Пользователи</NavLink>\n                <br />\n                <div className={styles.item}>Настройки</div>\n                <br />\n                <br />\n                <br />\n            <MyFriendscontainer />\n            </nav>\n        </div>\n    )\n}\nexport default Navbar;","import Navbar from \"./Navbar\";\nimport React from 'react'\nimport { connect } from \"react-redux\";\n\n\nconst mapStateToProps = (state)=> ({id: state.auth.id})\n\nconst NavbarContainer = props => <Navbar {...props} />\n\nexport default connect(mapStateToProps, {})(NavbarContainer)","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nconst Header = (props) => {\n   \n    return (\n        <div className={styles.header}>\n            <img src=\"http://cdn.onlinewebfonts.com/svg/download_246224.png\" alt=\"\"></img>\n            <div className={styles.auth}>\n\n            {props.isAuth?<div> <span>{`Вы авторизованы как ${props.login}`}</span>  <button onClick={()=>{props.getLogout()}}>{'Выйти'}</button> </div>\n            :<div> <span>{`Вы не авторизованы`}</span>  <button onClick={()=>{props.history.push('/login')}}>{'Войти'}</button> </div>}\n           \n\n            </div>\n        </div>\n    )\n}\nexport default Header;","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport {getLogout} from '../../redux/authReducer'\nimport Header from \"./Header\";\n\n\nconst mapStateToProps = (state)=> ({isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\n\nconst HeaderContainer = props => <Header {...props} />\n\nexport default compose(withRouter,\n    connect(mapStateToProps, {getLogout}))(HeaderContainer)","import React from 'react'\nimport { connect } from \"react-redux\";\nimport Login from \"./Login\";\nimport {getLogin} from '../../redux/authReducer'\n\n\nconst mapStateToProps = (state)=> ({isAuth: state.auth.isAuth,\nisFetching: state.auth.isFetching})\n\nconst LoginContainer = props => <Login {...props} />\n\nexport default connect(mapStateToProps, {getLogin})(LoginContainer)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport DialogsContainer from './conponents/Dialogs/DialogsContainer';\nimport Users from './conponents/Users/Users';\nimport UsersContainer from './conponents/Users/UsersContainer';\nimport ProfileContainer from './conponents/Profile/ProfileContainer';\nimport { useEffect } from 'react';\nimport { initializeApp } from './redux/appReducer';\nimport { connect } from 'react-redux';\nimport Preloader from './common/Preloader';\nimport Login from './conponents/Login/Login';\nimport NavbarContainer from './conponents/Navbar/NavbarContainer';\nimport HeaderContainer from './conponents/Header/HeaderContainer';\nimport LoginContainer from './conponents/Login/LoginContainer';\n\nfunction App(props) {\nuseEffect(() => {\n  props.initializeApp()\n  console.log(props)\n}, [props.id])\n\nif (props.isInitialized==false) {\n  return <Preloader />\n}\n  return (\n\n      <div className=\"wrapper\">\n        <HeaderContainer />\n        <Route path='/profile/:id?' render={()=><ProfileContainer />  }/>\n        <Route path='/dialogs'render={()=> <DialogsContainer /> }/>\n        <Route path='/users' render={()=><UsersContainer />}/>\n        <Route path='/login' render={() => <LoginContainer />}/>\n        <NavbarContainer />\n      </div>\n\n  );\n}\nconst mapStateToProps =(state)=>{\n  return {\n    id: state.auth.id,\n    isInitialized: state.app.isInitialized,\n    isAuth: state.auth.isAuth\n  }\n}\nexport default connect(mapStateToProps, {initializeApp})(App);\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nwindow.store=store\nReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n      </BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__14mCZ\",\"active\":\"Navbar_active__2WDes\",\"item\":\"Navbar_item__TANHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headPic\":\"ProfileInfo_headPic__2kWRF\",\"infowrapper\":\"ProfileInfo_infowrapper__38Snx\",\"avatar\":\"ProfileInfo_avatar__1a-s_\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__3zxXQ\",\"job\":\"ProfileInfo_job__2KfiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PagesLine_wrapper__t9hZs\",\"pages\":\"PagesLine_pages__2jLDa\",\"disapear\":\"PagesLine_disapear__3Etna\",\"active\":\"PagesLine_active__CFwbL\",\"pageItem\":\"PagesLine_pageItem__1Np_6\"};","module.exports = __webpack_public_path__ + \"static/media/user.b556e41a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__13Tbn\",\"head\":\"styles_head__1HPrp\",\"inputandlabel\":\"styles_inputandlabel__2x4lN\",\"btn\":\"styles_btn__3lDN9\",\"error\":\"styles_error__1HFc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Users_usersWrapper__39DJO\",\"eachUser\":\"Users_eachUser__22p5a\",\"username\":\"Users_username__20MwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__2Y85d\",\"imgAndContent\":\"post_imgAndContent__2Xrnc\",\"buttons\":\"post_buttons__2rvGX\",\"numOflikes\":\"post_numOflikes__-zYu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__e8Vwx\",\"dialogs\":\"Dialogs_dialogs__28fO_\",\"chatwrapper\":\"Dialogs_chatwrapper__3g6-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TextingArea_wrapper__2TH6Y\",\"dialogWindow\":\"TextingArea_dialogWindow__3Afb7\",\"writtingItems\":\"TextingArea_writtingItems__3TUqZ\",\"textarea\":\"TextingArea_textarea__LhdGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__s8aC5\",\"error\":\"posts_error__1iy9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ePJqt\",\"item\":\"Header_item__iF7ef\",\"auth\":\"Header_auth__1jYIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__1299O\",\"active\":\"DialogItem_active__2Lmry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper___oweM\"};","module.exports = __webpack_public_path__ + \"static/media/Dual Ring-1.9s-200px.97a48eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContent\":\"Profile_bodyContent__LKk28\",\"Name\":\"Profile_Name__ZrEZD\",\"description\":\"Profile_description__3Y06x\",\"newpostMaker\":\"Profile_newpostMaker__1q5Xa\",\"wall\":\"Profile_wall__35z1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyFriends_wrapper__34Mji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friend_wrapper__1CKqg\",\"online\":\"Friend_online__2dtqN\",\"offline\":\"Friend_offline__153_5\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}