{"ast":null,"code":"var _jsxFileName = \"/Users/mihailbronnikov/Desktop/ReactJS/src/conponents/Profile/posts/posts.jsx\";\nimport React from 'react';\nimport styles from './posts.module.css';\nimport ReactDOM from 'react-dom';\nimport Post from './post/post';\nimport { addPostActionCreator } from '../../../redux/ProfileReducer';\nimport { updatePostTextActionCreator } from '../../../redux/ProfileReducer';\n\nconst Posts = props => {\n  let componentsPostData = props.dataposts.map(post => {\n    return /*#__PURE__*/React.createElement(Post, {\n      avatarSrc: post.avatarSrc,\n      text: post.text,\n      numOflikes: post.likesCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }\n    });\n  });\n  let newPostElement = React.createRef();\n\n  let addpost = () => {\n    props.dispatch(addPostActionCreator());\n  };\n\n  let ontextchange = () => {\n    let text = newPostElement.current.value;\n    props.dispatch(updatePostTextActionCreator(text));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"\\u041C\\u043E\\u0438 \\u043F\\u043E\\u0441\\u0442\\u044B\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: ontextchange,\n    ref: newPostElement,\n    name: \"\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    value: props.posttext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addpost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0430 \\u0441\\u0442\\u0435\\u043D\\u0443\"), componentsPostData);\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/mihailbronnikov/Desktop/ReactJS/src/conponents/Profile/posts/posts.jsx"],"names":["React","styles","ReactDOM","Post","addPostActionCreator","updatePostTextActionCreator","Posts","props","componentsPostData","dataposts","map","post","avatarSrc","text","likesCount","newPostElement","createRef","addpost","dispatch","ontextchange","current","value","posts","posttext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,SAAQC,2BAAR,QAA0C,+BAA1C;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,kBAAkB,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAqBC,IAAD,IAAU;AACnD,wBAAO,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEA,IAAI,CAACC,SAAtB;AAAiC,MAAA,IAAI,EAAED,IAAI,CAACE,IAA5C;AAAkD,MAAA,UAAU,EAAEF,IAAI,CAACG,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFwB,CAAzB;AAGA,MAAIC,cAAc,GAAGf,KAAK,CAACgB,SAAN,EAArB;;AACA,MAAIC,OAAO,GAAG,MAAM;AAChBV,IAAAA,KAAK,CAACW,QAAN,CAAed,oBAAoB,EAAnC;AACH,GAFD;;AAIA,MAAIe,YAAY,GAAG,MAAM;AACrB,QAAIN,IAAI,GAAGE,cAAc,CAACK,OAAf,CAAuBC,KAAlC;AACAd,IAAAA,KAAK,CAACW,QAAN,CAAeb,2BAA2B,CAACQ,IAAD,CAA1C;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACqB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,eAEI;AAAU,IAAA,QAAQ,EAAEH,YAApB;AAAkC,IAAA,GAAG,EAAEJ,cAAvC;AAAuD,IAAA,IAAI,EAAC,EAA5D;AAA+D,IAAA,EAAE,EAAC,EAAlE;AAAqE,IAAA,IAAI,EAAC,IAA1E;AAA+E,IAAA,IAAI,EAAC,IAApF;AAAyF,IAAA,KAAK,EAAER,KAAK,CAACgB,QAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAJJ,EAMKT,kBANL,CADJ;AAUH,CAxBD;;AAyBA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport styles from './posts.module.css'\nimport ReactDOM from 'react-dom';\nimport Post from './post/post'\nimport {addPostActionCreator} from '../../../redux/ProfileReducer'\nimport {updatePostTextActionCreator} from '../../../redux/ProfileReducer'\nconst Posts = (props) => {\n    let componentsPostData = props.dataposts.map((post) => {\n        return <Post avatarSrc={post.avatarSrc} text={post.text} numOflikes={post.likesCount} />\n    })\n    let newPostElement = React.createRef();\n    let addpost = () => {\n        props.dispatch(addPostActionCreator())\n    }\n\n    let ontextchange = () => {\n        let text = newPostElement.current.value;\n        props.dispatch(updatePostTextActionCreator(text))\n    }\n\n    return (\n        <div className={styles.posts}>\n            <p>Мои посты</p>\n            <textarea onChange={ontextchange} ref={newPostElement} name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={props.posttext}></textarea>\n\n            <button onClick={addpost}>Добавить на стену</button>\n\n            {componentsPostData}\n        </div>\n    )\n}\nexport default Posts"]},"metadata":{},"sourceType":"module"}